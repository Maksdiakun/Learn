{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Learn/src/components/VideSection/index.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./index.scss\";\nimport ReactPlayer from \"react-player\";\nimport SubtitlesList from \"../../components/SubtitlesList\";\nimport TranslateModal from \"../../components/TranslateModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSubtitles, getVideoLanguage, watch_video } from \"../../store/videoPage/video.actions\";\nimport Captions from \"../Captions\";\nimport VideoLanguageSelect from \"../VideoLanguageSelect\";\nimport LangBtn from \"../UiComponents/LangBtn\";\nimport BackBtn from \"../UiComponents/BackBtn\";\nimport Loader from \"../UiComponents/Loader\";\n\nconst VideSection = ({\n  id\n}) => {\n  const ref = useRef(null);\n  const dispatch = useDispatch();\n  const {\n    video: {\n      subtitles: {\n        languages: {\n          original_lang,\n          pending,\n          available_languages\n        }\n      },\n      video_id,\n      focusCaptions\n    },\n    user: {\n      info\n    },\n    general: {\n      language\n    }\n  } = useSelector(state => state);\n  const [state, setState] = useState({\n    playingTime: 0,\n    playing: false\n  });\n  const [langModal, setlangModal] = useState(false);\n\n  const langModalShow = val => {\n    setlangModal(val);\n  };\n\n  useEffect(() => {\n    dispatch(getVideoLanguage(id));\n    dispatch(watch_video(id)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    dispatch(getSubtitles(id)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [language]);\n\n  const progressFunc = props => {\n    setState(prevState => {\n      return { ...prevState,\n        playingTime: props.playedSeconds\n      };\n    });\n  };\n\n  const videoPlay = param => () => {\n    setState({ ...state,\n      playing: param\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, !pending ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, window.innerWidth >= 768 && /*#__PURE__*/React.createElement(BackBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 40\n    }\n  }), /*#__PURE__*/React.createElement(LangBtn, {\n    val: original_lang,\n    langModalShow: langModalShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: `https://www.youtube.com/watch?v=${id}`,\n    controls: true,\n    className: \"video_block\",\n    onProgress: progressFunc,\n    playing: state.playing,\n    onPlay: videoPlay(true),\n    config: {\n      youtube: {\n        playerVars: {\n          fs: 0,\n          modestbranding: 1,\n          rel: 0\n        }\n      }\n    },\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Captions, {\n    videoTime: state.playingTime,\n    videoPlay: videoPlay(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), focusCaptions.translated && /*#__PURE__*/React.createElement(TranslateModal, {\n    captions: {\n      user: info.id,\n      video_id,\n      ...focusCaptions\n    },\n    videoPlay: videoPlay(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), langModal && available_languages && /*#__PURE__*/React.createElement(VideoLanguageSelect, {\n    id: id,\n    langModalShow: langModalShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SubtitlesList, {\n    videoTime: state.playingTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default VideSection;","map":{"version":3,"sources":["/Users/mac/Desktop/Learn/src/components/VideSection/index.js"],"names":["React","useState","useEffect","useRef","ReactPlayer","SubtitlesList","TranslateModal","useDispatch","useSelector","getSubtitles","getVideoLanguage","watch_video","Captions","VideoLanguageSelect","LangBtn","BackBtn","Loader","VideSection","id","ref","dispatch","video","subtitles","languages","original_lang","pending","available_languages","video_id","focusCaptions","user","info","general","language","state","setState","playingTime","playing","langModal","setlangModal","langModalShow","val","progressFunc","props","prevState","playedSeconds","videoPlay","param","window","innerWidth","youtube","playerVars","fs","modestbranding","rel","translated"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./index.scss\";\nimport ReactPlayer from \"react-player\";\nimport SubtitlesList from \"../../components/SubtitlesList\";\nimport TranslateModal from \"../../components/TranslateModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getSubtitles,\n  getVideoLanguage,\n  watch_video,\n} from \"../../store/videoPage/video.actions\";\nimport Captions from \"../Captions\";\nimport VideoLanguageSelect from \"../VideoLanguageSelect\";\nimport LangBtn from \"../UiComponents/LangBtn\";\nimport BackBtn from \"../UiComponents/BackBtn\";\nimport Loader from \"../UiComponents/Loader\";\n\nconst VideSection = ({ id }) => {\n  const ref = useRef(null);\n  const dispatch = useDispatch();\n  const {\n    video: {\n      subtitles: {\n        languages: { original_lang, pending, available_languages },\n      },\n      video_id,\n      focusCaptions,\n    },\n    user: { info },\n    general: { language },\n  } = useSelector((state) => state);\n\n  const [state, setState] = useState({\n    playingTime: 0,\n    playing: false,\n  });\n  const [langModal, setlangModal] = useState(false);\n\n  const langModalShow = (val) => {\n    setlangModal(val);\n  };\n\n  useEffect(() => {\n    dispatch(getVideoLanguage(id));\n    dispatch(watch_video(id));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    dispatch(getSubtitles(id));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [language]);\n  const progressFunc = (props) => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        playingTime: props.playedSeconds,\n      };\n    });\n  };\n\n  const videoPlay = (param) => () => {\n    setState({ ...state, playing: param });\n  };\n\n  return (\n    <div className=\"video_wrap\">\n      {!pending ? (\n        <div className=\"video_section\">\n          {window.innerWidth >= 768 && <BackBtn />}\n          <LangBtn val={original_lang} langModalShow={langModalShow} />\n          <ReactPlayer\n            url={`https://www.youtube.com/watch?v=${id}`}\n            controls={true}\n            className=\"video_block\"\n            onProgress={progressFunc}\n            playing={state.playing}\n            onPlay={videoPlay(true)}\n            config={{\n              youtube: {\n                playerVars: {\n                  fs: 0,\n                  modestbranding: 1,\n                  rel: 0,\n                },\n              },\n            }}\n            ref={ref}\n          />\n          <Captions\n            videoTime={state.playingTime}\n            videoPlay={videoPlay(false)}\n          />\n          {focusCaptions.translated && (\n            <TranslateModal\n              captions={{\n                user: info.id,\n                video_id,\n                ...focusCaptions,\n              }}\n              videoPlay={videoPlay(true)}\n            />\n          )}\n          {langModal && available_languages && (\n            <VideoLanguageSelect id={id} langModalShow={langModalShow} />\n          )}\n        </div>\n      ) : (\n        <Loader />\n      )}\n      <SubtitlesList videoTime={state.playingTime} />\n    </div>\n  );\n};\n\nexport default VideSection;\n"]},"metadata":{},"sourceType":"module"}