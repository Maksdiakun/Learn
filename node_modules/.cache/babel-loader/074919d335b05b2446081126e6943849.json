{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Learn/src/components/UiComponents/Select/index.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { v4 } from \"uuid\";\nimport \"./index.scss\";\nimport arrow from \"../../../static/images/arrowDown.svg\";\n\nconst Select = ({\n  children,\n  optionsList,\n  defaultText = \"\",\n  selectAction\n}) => {\n  const [state, setState] = useState({\n    labelText: defaultText,\n    showOptionList: false,\n    optionsList: []\n  });\n  const blockRef = useRef(null);\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // This method handles the click that happens outside the\n  // select text and list area\n\n  const handleClickOutside = event => {\n    if (blockRef.current && !blockRef.current.contains(event.target)) {\n      setState(prevState => {\n        return { ...prevState,\n          showOptionList: false\n        };\n      });\n    }\n  }; // This method handles the display of option list\n\n\n  const handleListDisplay = () => {\n    setState(prevState => {\n      return { ...prevState,\n        showOptionList: !prevState.showOptionList\n      };\n    });\n  }; // This method handles the setting of name in select text area\n  // and list display on selection\n\n\n  const handleOptionClick = el => () => {\n    setState({\n      labelText: el.name,\n      showOptionList: false\n    }); // commennt  del this check\n\n    if (selectAction) {\n      selectAction(el);\n    }\n  };\n\n  const {\n    showOptionList,\n    labelText\n  } = state;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select_container\",\n    ref: blockRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `select_label${showOptionList ? \" select_label_active\" : \"\"}\n        `,\n    onClick: handleListDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, labelText), /*#__PURE__*/React.createElement(\"img\", {\n    src: arrow,\n    alt: \"\",\n    className: \"arrow_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))), showOptionList && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"select_options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, optionsList.map(option => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: v4(),\n      onClick: handleOptionClick(option),\n      className: labelText === option.name ? \"active_option\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, option.icon, option.name);\n  })));\n};\n\nexport default Select;","map":{"version":3,"sources":["/Users/mac/Desktop/Learn/src/components/UiComponents/Select/index.js"],"names":["React","useEffect","useState","useRef","v4","Select","children","optionsList","defaultText","selectAction","state","setState","labelText","showOptionList","blockRef","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","prevState","handleListDisplay","handleOptionClick","el","name","arrow","map","option","icon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { v4 } from \"uuid\";\nimport \"./index.scss\";\nimport arrow from \"../../../static/images/arrowDown.svg\";\n\nconst Select = ({ children, optionsList, defaultText = \"\", selectAction }) => {\n  const [state, setState] = useState({\n    labelText: defaultText,\n    showOptionList: false,\n    optionsList: [],\n  });\n  const blockRef = useRef(null);\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // This method handles the click that happens outside the\n  // select text and list area\n  const handleClickOutside = (event) => {\n    if (blockRef.current && !blockRef.current.contains(event.target)) {\n      setState((prevState) => {\n        return {\n          ...prevState,\n          showOptionList: false,\n        };\n      });\n    }\n  };\n\n  // This method handles the display of option list\n  const handleListDisplay = () => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        showOptionList: !prevState.showOptionList,\n      };\n    });\n  };\n\n  // This method handles the setting of name in select text area\n  // and list display on selection\n  const handleOptionClick = (el) => () => {\n    setState({\n      labelText: el.name,\n      showOptionList: false,\n    });\n    // commennt  del this check\n    if (selectAction) {\n      selectAction(el);\n    }\n  };\n  const { showOptionList, labelText } = state;\n  return (\n    <div className=\"select_container\" ref={blockRef}>\n      <div\n        className={`select_label${showOptionList ? \" select_label_active\" : \"\"}\n        `}\n        onClick={handleListDisplay}\n      >\n        {children}\n        <div>\n          <p>{labelText}</p>\n          <img src={arrow} alt=\"\" className=\"arrow_img\" />\n        </div>\n      </div>\n      {showOptionList && (\n        <ul className=\"select_options\">\n          {optionsList.map((option) => {\n            return (\n              <li\n                key={v4()}\n                onClick={handleOptionClick(option)}\n                className={labelText === option.name ? \"active_option\" : \"\"}\n              >\n                {option.icon}\n                {option.name}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}