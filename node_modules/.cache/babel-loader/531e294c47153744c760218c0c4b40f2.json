{"ast":null,"code":"import constants from \"../constans\";\nconst initState = {\n  subtitles: {\n    subtitlesTranslated: null,\n    subtitlesOriginal: null,\n    languages: {\n      pending: false,\n      original_lang: null,\n      translated_to: null,\n      err: null,\n      available_languages: null\n    },\n    videoLanguages: []\n  },\n  focusCaptions: {\n    original: null,\n    translated: null,\n    time: null,\n    from_lang: null,\n    to_lang: null,\n    youtube_id: null\n  },\n  video_id: null\n};\n\nconst videoReducer = (state = initState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case constants.SUBTITLES_SUCCESS:\n      return { ...state,\n        subtitles: payload\n      };\n\n    case constants.FOCUS_CAPTIONS:\n      return { ...state,\n        focusCaptions: payload\n      };\n\n    case constants.VIDEO_LANG_SUCCESS:\n      return { ...state,\n        subtitles: { ...state.subtitles,\n          languages: { ...state.subtitles.languages,\n            original_lang: payload\n          }\n        }\n      };\n\n    case constants.TEXT_TRANSLATE_SUCCESS:\n      return { ...state,\n        focusCaptions: payload\n      };\n\n    case constants.SAVE_TO_DB_SUCCESS:\n      return { ...state,\n        video_id: payload\n      };\n\n    case constants.GET_VIDEO_LANGUAGE_FETCHED:\n      return { ...state,\n        subtitles: { ...state.subtitles,\n          languages: { ...state.subtitles.languages,\n            pending: true\n          }\n        }\n      };\n\n    case constants.GET_VIDEO_LANGUAGE_SUCCESS:\n      return { ...state,\n        subtitles: { ...state.subtitles,\n          languages: { ...state.subtitles.languages,\n            original_lang: payload,\n            pending: false\n          }\n        }\n      };\n\n    case constants.GET_VIDEO_LANGUAGE_ERROR:\n      return { ...state,\n        subtitles: { ...state.subtitles,\n          languages: { ...state.subtitles.languages,\n            err: payload,\n            pending: false\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default videoReducer;","map":{"version":3,"sources":["/Users/mac/Desktop/Learn/src/store/videoPage/video.reducer.js"],"names":["constants","initState","subtitles","subtitlesTranslated","subtitlesOriginal","languages","pending","original_lang","translated_to","err","available_languages","videoLanguages","focusCaptions","original","translated","time","from_lang","to_lang","youtube_id","video_id","videoReducer","state","type","payload","SUBTITLES_SUCCESS","FOCUS_CAPTIONS","VIDEO_LANG_SUCCESS","TEXT_TRANSLATE_SUCCESS","SAVE_TO_DB_SUCCESS","GET_VIDEO_LANGUAGE_FETCHED","GET_VIDEO_LANGUAGE_SUCCESS","GET_VIDEO_LANGUAGE_ERROR"],"mappings":"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","sourcesContent":["import constants from \"../constans\";\n\nconst initState = {\n  subtitles: {\n    subtitlesTranslated: null,\n    subtitlesOriginal: null,\n    languages: {\n      pending: false,\n      original_lang: null,\n      translated_to: null,\n      err: null,\n      available_languages: null,\n    },\n    videoLanguages: [],\n  },\n  focusCaptions: {\n    original: null,\n    translated: null,\n    time: null,\n    from_lang: null,\n    to_lang: null,\n    youtube_id: null,\n  },\n  video_id: null,\n};\n\nconst videoReducer = (state = initState, { type, payload }) => {\n  switch (type) {\n    case constants.SUBTITLES_SUCCESS:\n      return {\n        ...state,\n        subtitles: payload,\n      };\n    case constants.FOCUS_CAPTIONS:\n      return {\n        ...state,\n        focusCaptions: payload,\n      };\n    case constants.VIDEO_LANG_SUCCESS:\n      return {\n        ...state,\n        subtitles: {\n          ...state.subtitles,\n          languages: {\n            ...state.subtitles.languages,\n            original_lang: payload,\n          },\n        },\n      };\n    case constants.TEXT_TRANSLATE_SUCCESS:\n      return {\n        ...state,\n        focusCaptions: payload,\n      };\n    case constants.SAVE_TO_DB_SUCCESS:\n      return {\n        ...state,\n        video_id: payload,\n      };\n    case constants.GET_VIDEO_LANGUAGE_FETCHED:\n      return {\n        ...state,\n        subtitles: {\n          ...state.subtitles,\n          languages: {\n            ...state.subtitles.languages,\n            pending: true,\n          },\n        },\n      };\n    case constants.GET_VIDEO_LANGUAGE_SUCCESS:\n      return {\n        ...state,\n        subtitles: {\n          ...state.subtitles,\n          languages: {\n            ...state.subtitles.languages,\n            original_lang: payload,\n            pending: false,\n          },\n        },\n      };\n    case constants.GET_VIDEO_LANGUAGE_ERROR:\n      return {\n        ...state,\n        subtitles: {\n          ...state.subtitles,\n          languages: {\n            ...state.subtitles.languages,\n            err: payload,\n            pending: false,\n          },\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default videoReducer;\n"]},"metadata":{},"sourceType":"module"}