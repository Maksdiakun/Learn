{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Learn/src/components/UiComponents/Form/index.js\";\nimport React from \"react\";\nimport \"./index.scss\";\nimport { useFormik } from \"formik\";\nimport InputField from \"../InputField\";\nimport RoundedBtn from \"../RoundedBtn\";\nimport ValidationRules from \"../../../helpers/ValidationRules\";\n\nconst Form = ({\n  fields,\n  initValues,\n  submitValue,\n  submitFunc\n}) => {\n  const formik = useFormik({\n    initialValues: initValues,\n    validationSchema: ValidationRules(initValues),\n    onSubmit: values => {\n      submitFunc(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, fields.map(el => /*#__PURE__*/React.createElement(InputField, {\n    key: el.name,\n    type: el.type,\n    name: el.name,\n    label: el.label,\n    placeholder: el.placeholder,\n    icon: el.icon,\n    onChange: formik.handleChange,\n    value: formik.values[el.name],\n    erorr: formik.errors[el.name],\n    touched: formik.touched[el.name],\n    addInfo: el.addInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(RoundedBtn, {\n    type: \"submit\",\n    value: submitValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/mac/Desktop/Learn/src/components/UiComponents/Form/index.js"],"names":["React","useFormik","InputField","RoundedBtn","ValidationRules","Form","fields","initValues","submitValue","submitFunc","formik","initialValues","validationSchema","onSubmit","values","handleSubmit","map","el","name","type","label","placeholder","icon","handleChange","errors","touched","addInfo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,UAAV;AAAsBC,EAAAA,WAAtB;AAAmCC,EAAAA;AAAnC,CAAD,KAAqD;AAChE,QAAMC,MAAM,GAAGT,SAAS,CAAC;AACvBU,IAAAA,aAAa,EAAEJ,UADQ;AAEvBK,IAAAA,gBAAgB,EAAER,eAAe,CAACG,UAAD,CAFV;AAGvBM,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBL,MAAAA,UAAU,CAACK,MAAD,CAAV;AACD;AALsB,GAAD,CAAxB;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,MAAM,CAACK,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,MAAM,CAACU,GAAP,CAAYC,EAAD,iBACV,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEA,EAAE,CAACC,IADV;AAEE,IAAA,IAAI,EAAED,EAAE,CAACE,IAFX;AAGE,IAAA,IAAI,EAAEF,EAAE,CAACC,IAHX;AAIE,IAAA,KAAK,EAAED,EAAE,CAACG,KAJZ;AAKE,IAAA,WAAW,EAAEH,EAAE,CAACI,WALlB;AAME,IAAA,IAAI,EAAEJ,EAAE,CAACK,IANX;AAOE,IAAA,QAAQ,EAAEZ,MAAM,CAACa,YAPnB;AAQE,IAAA,KAAK,EAAEb,MAAM,CAACI,MAAP,CAAcG,EAAE,CAACC,IAAjB,CART;AASE,IAAA,KAAK,EAAER,MAAM,CAACc,MAAP,CAAcP,EAAE,CAACC,IAAjB,CATT;AAUE,IAAA,OAAO,EAAER,MAAM,CAACe,OAAP,CAAeR,EAAE,CAACC,IAAlB,CAVX;AAWE,IAAA,OAAO,EAAED,EAAE,CAACS,OAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,eAgBE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,KAAK,EAAElB,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAoBD,CA7BD;;AA8BA,eAAeH,IAAf","sourcesContent":["import React from \"react\";\nimport \"./index.scss\";\nimport { useFormik } from \"formik\";\nimport InputField from \"../InputField\";\nimport RoundedBtn from \"../RoundedBtn\";\nimport ValidationRules from \"../../../helpers/ValidationRules\";\n\nconst Form = ({ fields, initValues, submitValue, submitFunc }) => {\n  const formik = useFormik({\n    initialValues: initValues,\n    validationSchema: ValidationRules(initValues),\n    onSubmit: (values) => {\n      submitFunc(values);\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      {fields.map((el) => (\n        <InputField\n          key={el.name}\n          type={el.type}\n          name={el.name}\n          label={el.label}\n          placeholder={el.placeholder}\n          icon={el.icon}\n          onChange={formik.handleChange}\n          value={formik.values[el.name]}\n          erorr={formik.errors[el.name]}\n          touched={formik.touched[el.name]}\n          addInfo={el.addInfo}\n        />\n      ))}\n      <RoundedBtn type=\"submit\" value={submitValue} />\n    </form>\n  );\n};\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}